[metadata]
name = dc_cli
summary = A command-line interface for SD2E Data Catalog
description-file = README.rst
author = Matthew Vaughn
author-email = opensource@tacc.cloud
home-page = https://github.com/SD2E/dc-cli
license = LICENSE.txt
keywords = datacatalog
zip_safe = False

[files]
packages = dc_cli

[entry_points]
console_scripts =
    dc=dc_cli.main:main
dc.cli =
    version = dc_cli.version:Version
    token_create = dc_cli.token:TokenShow
    # allocation_source_list = atmosphere.allocation_source:AllocationSourceList
#     allocation_source_show = atmosphere.allocation_source:AllocationSourceShow
#     instance_actions = atmosphere.instance:InstanceActions
#     instance_create = atmosphere.instance:InstanceCreate
#     instance_delete = atmosphere.instance:InstanceDelete
#     instance_list = atmosphere.instance:InstanceList
#     instance_show = atmosphere.instance:InstanceShow
#     instance_suspend = atmosphere.instance:InstanceSuspend
#     instance_resume = atmosphere.instance:InstanceResume
#     instance_reboot = atmosphere.instance:InstanceReboot
#     instance_stop = atmosphere.instance:InstanceStop
#     instance_start = atmosphere.instance:InstanceStart
#     instance_redeploy = atmosphere.instance:InstanceRedeploy
#     instance_shelve = atmosphere.instance:InstanceShelve
#     instance_unshelve = atmosphere.instance:InstanceUnshelve
#     instance_attach = atmosphere.instance:InstanceAttach
#     instance_detach = atmosphere.instance:InstanceDetach
#     instance_history = atmosphere.instance:InstanceHistory
#     image_list = atmosphere.image:ImageList
#     image_search = atmosphere.image:ImageSearch
#     image_show = atmosphere.image:ImageShow
#     image_version_show = atmosphere.image:ImageVersionShow
#     image_version_list = atmosphere.image:ImageVersionList
#     project_create = atmosphere.project:ProjectCreate
#     project_list = atmosphere.project:ProjectList
#     project_show = atmosphere.project:ProjectShow
#     provider_list = atmosphere.provider:ProviderList
#     provider_show = atmosphere.provider:ProviderShow
#     identity_list = atmosphere.identity:IdentityList
#     identity_show = atmosphere.identity:IdentityShow
#     group_list = atmosphere.group:GroupList
#     group_show = atmosphere.group:GroupShow
#     size_list = atmosphere.size:SizeList
#     size_show = atmosphere.size:SizeShow
#     volume_create = atmosphere.volume:VolumeCreate
#     volume_delete = atmosphere.volume:VolumeDelete
#     volume_list = atmosphere.volume:VolumeList
#     volume_show = atmosphere.volume:VolumeShow
#     maintenance_record_list = atmosphere.maintenance_record:MaintenanceRecordList
#     maintenance_record_show = atmosphere.maintenance_record:MaintenanceRecordShow
# atmosphere.cli.volume_delete =
#     delete_hook = atmosphere.hooks.delete_hook:DeleteHook
# atmosphere.cli.instance_delete =
#     delete_hook = atmosphere.hooks.delete_hook:DeleteHook
distutils.commands =
# behave_test = setuptools_behave:behave_test

# [cmdclass]
# behave_test = behave_test

# [behave_test]
# format = progress
# tags = -@xfail
# args = features

[pbr]
autodoc_tree_index_modules = False
autodoc_tree_excludes = setup.py

[build_sphinx]
builders = html,man
all-files = 1
source-dir = docs
build-dir = docs/_build

[wheel]
universal = 1

[aliases]
test = pytest

[tool:pytest]
addopts = --verbose --cov dc_cli --cov-report xml --junit-xml pytest.xml

# [bdist_wheel]
# universal = 1

# [flake8]
# statistics = true
# max-line-length = 120
# ignore =
# # Allow module-level imports after syspath bashing
# E402
# # Allow unused imports
# F401
# # Allow <2 Blank lines
# E302
# # Futile assignments allowed
# F841
# # Don't force two lines between functions
# E305
# exclude = .git,__pycache__,.hypothesis,build,dist

# [coverage:run]
# source=dc/*
# omit=.tox,tests,
# plugins=

# [tool:pytest]
# norecursedirs =
# testpaths = tests
# addopts =
# --cache-clear
# --flake8
# --verbose
# --cov=syd --cov-config setup.cfg
